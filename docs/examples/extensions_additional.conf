;!
;! Automatically generated configuration file
;! Filename: extensions.conf (/etc/asterisk/extensions_additional.conf)
;! Generator: Manager
;! Creation Date: Fri Jun 27 11:20:25 2014
;!

[macro-trunkdial-failover-0.4]
exten = s,1,GotoIf($[${LEN(${FMCIDNUM})} >= 4]?1-fmsetcid,1)
exten = s,n,GotoIf($[${LEN(${GLOBAL_OUTBOUNDCIDNAME})} > 1]?1-setgbobname,1)
exten = s,n,Set(CALLERID(num)=${IF($[${LEN(${CID_${CALLERID(num)}})} > 2]?${CID_${CALLERID(num)}}:${CALLERID(num)})})
exten = s,n,GotoIf($[${LEN(${CALLERID(num)})} >= 4]?1-dial,1)
exten = s,n,Set(CALLERID(all)=${IF($[${LEN(${CID_${ARG3}})} >= 4]?${CID_${ARG3}}:${GLOBAL_OUTBOUNDCID})})
exten = s,n,Goto(1-dial,1)
exten = 1-setgbobname,1,Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME})
exten = 1-setgbobname,n,Goto(s,3)
exten = 1-fmsetcid,1,Set(CALLERID(num)=${FMCIDNUM})
exten = 1-fmsetcid,n,Set(CALLERID(name)=${FMCIDNAME})
exten = 1-fmsetcid,n,Goto(1-dial,1)
exten = 1-dial,1,Dial(${ARG1})
exten = 1-dial,n,Gotoif(${LEN(${ARG2})} > 0 ?1-${DIALSTATUS},1:1-out,1)
exten = 1-CHANUNAVAIL,1,Goto(failover,1)
exten = 1-CONGESTION,1,Goto(failover,1)
exten = 1-out,1,Noop(Dial failed for some reason with DIALSTATUS = ${DIALSTATUS} and HANGUPCAUSE = ${HANGUPCAUSE})
exten = 1-out,n,Goto(s-${DIALSTATUS},1)
exten = failover,1,GotoIf($[${LEN(${FMCIDNUM})} >= 4]?failover-fmsetcid,1)
exten = failover,2,GotoIf($[${LEN(${GLOBAL_OUTBOUNDCIDNAME})} > 1]?failover-setgbobname,1)
exten = failover,3,Set(CALLERID(num)=${IF($[${LEN(${CID_${CALLERID(num)}})} > 2]?${CID_${CALLERID(num)}}})
exten = failover,n,GotoIf($[${LEN(${CALLERID(num)})} >= 4]?failover-dial,1)
exten = failover,n,Set(CALLERID(all)=${IF($[${LEN(${CID_${ARG4}})} >= 4]?${CID_${ARG4}}:${GLOBAL_OUTBOUNDCID})})
exten = failover,n,Goto(failover-dial,1)
exten = failover-setgbobname,1,Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME})
exten = failover-setgbobname,n,Goto(failover,3)
exten = failover-fmsetcid,1,Set(CALLERID(num)=${FMCIDNUM})
exten = failover-fmsetcid,n,Set(CALLERID(name)=${FMCIDNAME})
exten = failover-fmsetcid,n,Goto(failover-dial,1)
exten = failover-dial,1,Dial(${ARG2})
exten = failover-dial,n,Goto(s-${DIALSTATUS},1)
exten = s-BUSY,1,Noop(Dial failed due to trunk reporting BUSY - giving up)
exten = s-BUSY,n,Playtones(busy)
exten = s-BUSY,n,Busy(5)
exten = s-ANSWER,1,Noop(Call successfully answered - Hanging up now)
exten = s-ANSWER,n,Macro(hangupcall,)
exten = s-NOANSWER,1,Noop(Dial failed due to trunk reporting NOANSWER - giving up)
exten = s-NOANSWER,n,Progress
exten = s-NOANSWER,n,Playback(number-not-answering,noanswer)
exten = s-NOANSWER,n,Macro(hangupcall,)
exten = s-INVALIDNMBR,1,Noop(Dial failed due to trunk reporting Address Incomplete - giving up)
exten = s-INVALIDNMBR,n,Progress
exten = s-INVALIDNMBR,n,Playback(ss-noservice,noanswer)
exten = s-INVALIDNMBR,n,Macro(hangupcall,)
exten = s-CHANGED,1,Noop(Dial failed due to trunk reporting Number Changed - giving up)
exten = s-CHANGED,n,Playtones(busy)
exten = s-CHANGED,n,Busy(5)
exten = s-CHANGED,n,Macro(hangupcall,)
exten = _s-.,1,Set(RC=${IF($[${ISNULL(${HANGUPCAUSE})}]?0:${HANGUPCAUSE})})
exten = _s-.,n,Goto(${RC},1)
exten = 0,1,Goto(s-NOANSWER,1)
exten = 1,1,Goto(s-NOANSWER,1)
exten = 17,1,Goto(s-BUSY,1)
exten = 18,1,Goto(s-NOANSWER,1)
exten = 22,1,Goto(s-CHANGED,1)
exten = 23,1,Goto(s-CHANGED,1)
exten = 28,1,Goto(s-INVALIDNMBR,1)
exten = 66,1,Goto(s-INVALIDNMBR,1)
exten = 34,1,Goto(s-INVALIDNMBR,1)
exten = h,1,Macro(hangupcall,)


[macro-dial-failover]
exten => s,1,Set(CALL_ATTEMPT=1)
exten => s,n,Set(CALLERID(all)=${GLOBAL_OUTBOUNDCIDNAME})
exten => s,n,Set(TERM_PROVIDER=${TERM_PROVIDER1})
exten => s,n,Set(WHOMAKEHANGUP=CALLER)
exten => s,n,Dial(${TERM_PROVIDER}/${ARG1},60,TKgr)
exten => s,n,Set(WHOMAKEHANGUP=CALLEE)
exten => s,n,GotoIf($["${CALL_ATTEMPT}" >= "${MAX_PROVIDERS}"]?s-CANCEL,1)
exten => s,n,Set(CALL_ATTEMPT=$[${CALL_ATTEMPT} + 1])
exten => s,n,Goto(s-${DIALSTATUS},1)

exten => s-BUSY,1,Noop()
exten => s-BUSY,1,Playtones(busy)
exten => s-BUSY,1,Busy(5)

exten => s-NOANSWER,1,Progress
exten => s-NOANSWER,n,Playback(number-not-answering,noanswer)
exten => s-NOANSWER,n,Hangup()

exten => s-INVALIDNMBR,1,Noop(Dial failed due to trunk reporting Address Incomplete - giving up)
exten => s-INVALIDNMBR,n,Progress
exten => s-INVALIDNMBR,n,Playback(ss-noservice,noanswer)
exten => s-INVALIDNMBR,n,Hangup()

exten => s-CANCEL,1,NoOP(Call closed by ${WHOMAKEHANGUP}
exten => s-CANCEL,n,Playback(ss-noservice,noanswer)

exten => s-HANGUP,1,NoOP(Call closed by ${WHOMAKEHANGUP}
exten => s-ANSWER,1,NoOP(Call closed by ${WHOMAKEHANGUP}

exten => s-CHANUNAVAIL,1,Set(TERM_PROVIDER=${EVAL(${TERM_PROVIDER${CALL_ATTEMPT}})})
exten => s-CHANUNAVAIL,2,Goto(s,3)

exten => s-CONGESTION,1,Set(TERM_PROVIDER=${EVAL(${TERM_PROVIDER${CALL_ATTEMPT}})})
exten => s-CONGESTION,2,Goto(s,3)

exten = _s-.,n,Playback(bye)


; This macro is used for one touch recording 
[macro-app-record]
exten => s,1,GotoIf($["${XAD}" = "0" | "${XAD}" = ""]?startrec:stoprec)
exten => s,n(startrec),Playback(beep)
exten => s,n,Set(XAD=1)
exten => s,n,Set(MONITOR_EXEC=/etc/asterisk/scripts/one-touch-rec.sh)
exten => s,n,Monitor(wav,/var/spool/asterisk/monitor/${CALLERID(num)}_${STRFTIME(${EPOCH},GMT+0,%F_%T)},m)
exten => s,n,MacroExit
exten => s,n(stoprec),StopMonitor
exten => s,n,Set(XAD=0)
exten => s,n,Playback(beep)
exten => s,n,MacroExit

;
[macro-app-nway-start]
exten => s,1,Set(CONFNO=800)
exten => s,n,ChannelRedirect(${BRIDGEPEER},dynamic-nway,${CONFNO},1)
exten => s,n(read),Read(DST,dial,,i)
exten => s,n,ExecIf($["${DST}" = ""]?Goto(read))
exten => s,n,Set(DYNAMIC_FEATURES=nway-inv#nway-noinv)
exten => s,n,Dial(Local/${DST}@dynamic-nway-dest,,g)
exten => s,n,Set(DYNAMIC_FEATURES=)
exten => s,n,Goto(dynamic-nway,${CONFNO},1)

; Here we duplicate dialplan :-(
[dynamic-nway-dest]
exten => _XXXX,1,Dial(SIP/${EXTEN})

[dynamic-nway]
exten => _X.,1,Answer
exten => _X.,n,Set(CONFNO=${EXTEN})
exten => _X.,n,Set(MEETME_EXIT_CONTEXT=dynamic-nway-invite)
exten => _X.,n,Set(DYNAMIC_FEATURES=)
exten => _X.,n,MeetMe(${CONFNO},pdMX)
exten => _X.,n,Hangup

[nway-invite]
exten => 0,1,Read(DST,dial,,i)
exten => 0,n,Set(DYNAMIC_FEATURES=nway-inv#nway-noinv)
exten => 0,n,Dial(Local/${DST}@default,,g)
exten => 0,n,Set(DYNAMIC_FEATURES=)
exten => 0,n,Goto(dynamic-nway,${CONFNO},1)
exten => i,1,Goto(dynamic-nway,${CONFNO},1)

[macro-app-nway-ok]
exten => s,1,ChannelRedirect(${BRIDGEPEER},dynamic-nway,${CONFNO},1)

[macro-app-nway-notok]
exten => s,1,SoftHangup(${BRIDGEPEER})


;
[app-echo-test]
exten => *43,1,Answer
;same => n,Playback(/var/lib/asterisk/sounds/custom/AFEM)
same => n,Set(_SIP_SRTP_SDES=1)
same => n,Set(_SIPSRTP=1)
same => n,Set(_SIPSRTP_CRYPTO=enable)
same => n,Wait(1)
same => n,Playback(demo-echotest)
same => n,Echo()
same => n,Playback(demo-echodone)
same => n,Hangup
exten => h,1,ResetCDR()
same => n,NoCDR()

[app-speakextennum]
exten => *44,1,Answer
same => n,Wait(1)
same => n,Macro(user-callerid,)
same => n,Playback(your)
same => n,Playback(extension)
same => n,Playback(number)
same => n,Playback(is)
same => n,SayDigits(${CALLERID(num)})
same => n,Wait(2)
same => n,Playback(goodbye)
same => n,Hangup
exten => h,1,ResetCDR()
same => n,NoCDR()

[app-speakingclock]
exten => *45,1,Answer
same => n,Wait(1)
same => n,Set(NumLoops=0)
same => n,(start),Set(FutureTime=$[${EPOCH} + 11])
same => n,Playback(at-tone-time-exactly)
same => n,GotoIf($["${TIMEFORMAT}" = "kM"]?hr24format)
same => n,SayUnixTime(${FutureTime},,Zulu,HNS)
same => n,Goto(waitloop)
same => n,(hr24format),SayUnixTime(${FutureTime},${timezone},HNS)
same => n,(waitloop),Set(TimeLeft=$[${FutureTime} - ${EPOCH}])
same => n,GotoIf($[${TimeLeft} < 1]?playbeep)
same => n,Wait(1)
same => n,Goto(waitloop)
same => n,(playbeep),Playback(beep)
same => n,Wait(5)
same => n,Set(NumLoops=$[${NumLoops} + 1])
same => n,GotoIf($[${NumLoops} < 5]?start)
same => n,Playback(goodbye)
same => n,Hangup
exten => h,1,ResetCDR()
same => n,NoCDR()

[app-speakingtime]
exten => *46,1,NoOp(Time: ${EXTEN} ${timezone})
same => n,Set(FUTURETIME=$[${EPOCH} + 12])
same => n,SayUnixTime(${FUTURETIME},Zulu,HNS)
same => n,SayPhonetic(z)
same => n,SayUnixTime(${FUTURETIME},${timezone},HNS)
same => n,Playback(spy-local)
same => n,WaitUntil(${FUTURETIME})
same => n,Playback(beep)
same => n,Hangup()
exten = *47,1,NoOp(Time: ${EXTEN} ${timezone})
same => n,Set(CALLERID(num)=${EXTEN})
same => n,Wait(0.25)
same => n,Answer()
same => n,Playback(vm-from)
same => n,SayDigits(${CALLERID(ani)})
same => n,Wait(1.25)
same => n,SayDigits(${CALLERID(ani)})
same => n,Hangup()
exten = *234,1,Wait(1)
same => n,Set(CALLERID(num)=*234)
same => n,Playback(tt-monkeys)
same => n,Hangup()
exten = 1235,1,NoOp(Time: ${EXTEN} ${timezone})
same => n,Wait(0.25)
same => n,Answer()
same => n,Set(FUTURETIME=$[${EPOCH} + 12])
same => n,SayUnixTime(${FUTURETIME},Zulu,HNS)
same => n,SayPhonetic(z)
same => n,SayUnixTime(${FUTURETIME},${timezone},HNS)
same => n,Playback(spy-local)
same => n,WaitUntil(${FUTURETIME})
same => n,Playback(beep)
same => n,Hangup()
exten => h,1,ResetCDR()
same => n,NoCDR()

[app-test-number]
exten => *48,1,Ringing()
same => n,Wait(3)
same => n,Answer()
same => n,Playback(dir-multi3)
same => n,Wait(1)
same => n,SayDigits(${CALLERID(num)})
same => n,Wait(1)
same => n,Playback(channel)
same => n,Wait(1)
same => n,SayAlpha(${CHANNEL})
same => n,Wait(1)
same => n,Playback(readback-instructions)
same => n,Record(/tmp/*62-${UNIQUEID}.wav,0,30)
same => n,Playback(/tmp/*62-${UNIQUEID})
same => n,System(rm /tmp/*62-${UNIQUEID}.wav)
same => n,Wait(1)
same => n,Playback(vm-goodbye)
same => n,Hangup()
exten => h,1,ResetCDR()
same => n,NoCDR()

[app-fake-outgoing-context]
exten => *49,1,Answer()
same => n,Monitor(wav,"00000000",m)
same => n,Dial(DAHDI/g2/8888)
same => n,Hangup()

[app-play-record]
exten => _*50XXXXXXXX,1,Answer()
same => n,WaitForSilence(2000,1,90)
same => n,Playback(sip-silence)
same => n,Playback(/var/spool/asterisk/monitor/${EXTEN:3})
same => n,Hangup()
exten => _56660XXXXX,1,Goto(default,6${EXTEN:1},1)
exten => h,1,ResetCDR()
same => n,NoCDR()

[app-last-caller]
exten = *69,1,Answer
same => n,Playback(last-num-to-call)
same => n,Set(number=${DB(KESIX/USERS/${CALLERID(num)}/lastcaller)})  ; Look up the last caller for this extension
same => n,GotoIf($["${number}" = ""]?s-nonum,1:5)  ; If $number is blank, jump to unidentified label
same => n,Wait(0.5)
same => n,SayDigits(${number})
same => n,Wait,1
same => n,Playback(weasels-eaten-phonesys)
same => n,Hangup
exten => s-nonum,1,Playback(unidentified-no-callback)
exten => s-nonum,n,Playback(vm-goodbye)
exten => s-nonum,n,Hangup
exten => h,1,ResetCDR()
same => n,NoCDR()

[app-recorde-dnd-prompt]
exten => _*70XXXX,1,NoOp(app-recorde-dnd-prompt called)
same => n,Answer
;same => n,Playback(vm-rec-temp)
same => n,Playback(vm-rec-temp)
same => n,WaitForSilence(2000,1,90)
same => n,Record(/var/spool/asterisk/monitor/DND_${EXTEN:3}.wav)
same => n,Wait(2)
same => n,Hangup()
exten => _*71XXXX,1,Answer
same => n,Playback(/var/spool/asterisk/monitor/DND_${EXTEN:3})
same => n,Wait(2)
same => n,Hangup()

[app-getvoicemail]
exten => *72,1,NoOp(get voicemail)
same => n,Wait(1)
same => n,VoiceMailMain(${CALLERID(num)}@default,s)
same => n,Hangup()

[app-set-in-busy]
exten => *73,1,NoOp(set ${CALLERID(num)} activate voicemail)
same => n,Set(USER_VOICEMAIL_STATE=User/${CALLERID(num)}_VoiceMail)
same => n,Set(DB(${USER_VOICEMAIL_STATE})=1)
same => n,Playback(silence/1&agent-loggedoff)
same => n,Hangup()

[app-set-not-use]
exten => *74,1,NoOp(set ${CALLERID(num)} desactivate voicemail)
same => n,Set(USER_VOICEMAIL_STATE=User/${CALLERID(num)}_VoiceMail)
same => n,DBdeltree(${USER_VOICEMAIL_STATE})
same => n,Playback(silence/1&agent-loginok)
same => n,Hangup()

[app-daynight-toggle]
exten => *75,1,Answer
exten => *75,n,Wait(1)
exten => *75,n,Set(NIGHTUSER=${CALLERID(num)})
exten => *75,n,GotoIf($["${DB(NIGHT/${NIGHTUSER})}" = ""]?activate:deactivate)
exten => *75,n(activate),Set(DB(NIGHT/${NIGHTUSER})=YES)
exten => *75,n,Set(STATE=INUSE)
exten => *75,n,Gosub(app-daynight-toggle,sstate,1)
exten => *75,n,Playback(call-forward&activated)
exten => *75,n,Macro(hangupcall,)
exten => *75,n(deactivate),dbDel(NIGHT/${NIGHTUSER})
exten => *75,n,Set(STATE=NOT_INUSE)
exten => *75,n,Gosub(app-daynight-toggle,sstate,1)
exten => *75,n,Playback(call-forward&de-activated)
exten => *75,n,Macro(hangupcall,)
exten => sstate,1,Set(DEVICE_STATE(Custom:NIGHT${NIGHTUSER})=${STATE})
exten => sstate,n(return),Return()
; end of [app-daynight-toggle]


[app-dnd-toggle]
exten => *76,1,Answer
exten => *76,n,Wait(1)
exten => *76,n,Set(DNDUSER=${CALLERID(num)})
exten => *76,n,GotoIf($["${DB(DND/${DNDUSER})}" = ""]?activate:deactivate)
exten => *76,n(activate),Set(DB(DND/${DNDUSER})=YES)
exten => *76,n,Set(STATE=INUSE)
exten => *76,n,Gosub(app-dnd-toggle,sstate,1)
exten => *76,n,Playback(voice-mail-system&activated)
exten => *76,n,Macro(hangupcall,)
exten => *76,n(deactivate),dbDel(DND/${DNDUSER})
exten => *76,n,Set(STATE=NOT_INUSE)
exten => *76,n,Gosub(app-dnd-toggle,sstate,1)
exten => *76,n,Playback(voice-mail-system&de-activated)
exten => *76,n,Macro(hangupcall,)
exten => sstate,1,Set(DEVICE_STATE(Custom:DND${DNDUSER})=${STATE})
exten => sstate,n(return),Return()
; end of [app-daynight-toggle]

[app-services]
include => app-last-caller
include => app-echo-test
include => app-speakextennum
include => app-speakingclock
include => app-speakingtime
include => app-test-number
include => app-play-record
include => app-getvoicemail
include => app-set-in-busy
include => app-set-not-use
include => app-fake-outgoing-context
include => app-bad-number
include => app-recorde-dnd-prompt

exten => h,1,ResetCDR()
same => n,NoCDR()

[app-fax-in-old]
exten => fax,1,Verbose(3,Incoming fax)
same => n,Set(MAILFILE=/tmp/mail_${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}.txt)
same => n,NoOp(Mail file : ${MAILFILE})
same => n,Set(TIFFFILE=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}_${CALLERID(num)})
same => n,Set(FAXDEST=/tmp)
same => n,Set(TIFF=/var/spool/fax_in/${TIFFFILE}.tiff)
same => n,Set(PDF=/var/www/fax/${TIFFFILE}.pdf)
same => n,Set(FAXOPT(ecm)=yes)
same => n,Set(FAXOPT(headrinfo)=Fax)
same => n,Set(FAXOPT(localstationid)=0493941157)
same => n,Set(FAXOPT(maxrate)=14400)
same => n,Set(FAXOPT(minrate)=2400)
same => n,ReceiveFax(${TIFF})
same => n,Verbose(3,- Fax receipt completed with status: ${FAXSTATUS})
same => n,SET(PDFFILE=/var/www/fax/${FAXFILE}.pdf)
same => n,Verbose(3,- Converting to pdf file)
same => n,System(tiff2pdf ${TIFF} -o ${PDF})
same => n,NoOp(${TIFF} removed from system)
same => n,System(rm ${TIFF})
same => n,NoOp(Preparing mail )
same => n,System(echo "Hello," >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "You got a fax  : ${EXTEN}" >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "Fax from : ${CALLERID(num)}" >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "You can see fax in the address : " >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "http://${ADDRESSFAXVIEWERSERVER}/fax/${TIFFFILE}.pdf" >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "" >> ${MAILFILE})
same => n,System(echo "Best Regards" >> ${MAILFILE})
same => n,System(mail -s "New Fax for ${EXTEN}" ${FAXMAILNOTIFICATION} < ${MAILFILE})

[app-fax-in]
exten => receive,1,NoOP(------------------- FAX from ${CALLERID(number)} ------------------)
same => n,Answer()
same => n,Set(FILENAME=fax-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${CALLERID(number)})
same => n,Set(FAXFILE=/var/spool/asterisk/fax/receive/${FILENAME}.tif)
same => n,Set(FAXOPT(headerinfo)=Received by ${CALLERID(number)} ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M)})
same => n,Set(FAXOPT(localstationid)=OFFICE)
same => n,Set(FAXOPT(maxrate)=14400)
same => n,Set(FAXOPT(minrate)=2400)
same => n,NoOp(FAXOPT(ecm) : ${FAXOPT(ecm)})
same => n,NoOp(FAXOPT(headerinfo) : ${FAXOPT(headerinfo)})
same => n,NoOp(FAXOPT(localstationid) : ${FAXOPT(localstationid)})
same => n,NoOp(FAXOPT(maxrate) : ${FAXOPT(maxrate)})
same => n,NoOp(FAXOPT(minrate) : ${FAXOPT(minrate)})
same => n,NoOp(**** RECEIVING FAX : ${FAXFILE} ****)
same => n,ReceiveFAX(${FAXFILE})
same => n,Hangup()
exten => h,1,NoOP(------------------- FAX from ${CALLERID(number)} ------------------)
exten => h,n,NoOP(------------------- STATUS ${FAXSTATUS} ${FAXERROR} ------------------)
exten => h,n,system(/var/lib/asterisk/agi-bin/fax/fax-incomming.py --to ${FAXMAILNOTIFICATION} --from ${FAXFROMNOTIFICATION} --file ${FAXFILE})

[app-fax-out]
exten => 1,1,Answer()
same => n,Dial(${FAXRCPT})
same => n,Hangup(1)  ;This should jump to Hangup Priority 2 and skip the script
exten => *66,1,Answer()
same => n,NoOp(**** SENDING FAX ****)
same => n,Wait(6)
same => n,Set(FAXNUM=${FAXNUM})
same => n,Set(FAXFILE=${FULLPATH})
same => n,NoOp(**** SENDING FAX : ${FAXFILE} ****)
same => n,SendFAX(${FAXFILE})
same => n,NoOp(FAXOPT(status) : ${FAXOPT(status)})
same => n,NoOp(FAXOPT(statusstr) : ${FAXOPT(statusstr)})
same => n,NoOp(FAXOPT(error) : ${FAXOPT(error)})
same => n,Set(FAXSTATUS=${FAXOPT(status)})
same => n,Set(FAXSTATUSSTR=${FAXOPT(statusstr)})
same => n,Set(FAXERROR=${FAXOPT(error)})
same => n,Hangup(1)
exten => h,1,system(/var/lib/asterisk/agi-bin/fax-out-notify.py --to ${FAXMAILNOTIFICATION} --from ${FAXFROMNOTIFICATION} --status "${FAXSTATUS}" --statusstr "${FAXSTATUSSTR}" --error "${FAXERROR}" --faxnum "${FAXNUM}")  ;
exten => h,2,Hangup

[app-ext-not-found]
exten => _X.,1,Playback(vm-goodbye)
same => n,Macro(hangupcall)

[app-extention-spy]
exten => _*51XXXX,1,Answer()
same => n,ChanSpy(SIP/${EXTEN:3},bw)
same => n,Hangup()

[app-spyer]
exten => _X.,1,Dial(SIP/${EXTEN},,)
same => n,,Hangup()

[app-bad-number]
exten => _X.,1,ResetCDR()
same => n,NoCDR()
same => n,Wait(1)
same => n,Playback(silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer)
same => n,Wait(0.5)
same => n,Playback(goodbye)
same => n,Congestion(20)
same => n,Hangup()
exten => _*.,1,ResetCDR()
same => n,NoCDR()
same => n,Wait(1)
same => n,Playback(silence/1&feature-not-avail-line&silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer)
same => n,Wait(0.5)
same => n,Playback(goodbye)
same => n,Wait(0.5)
same => n,Congestion(20)
same => n,Hangup()

[app-out]
exten => _XX.,1,NoOp(app-out)
same => n,Set(dnid=${EXTEN})
same => n,Set(inoutstatus=1)
same => n,Macro(monitor-enable,${CALLERID(num)})
same => n,Set(DB(KESIXUSER/${CALLERID(num)}/lastcalled)=${EXTEN})
;same => n,Macro(trunkdial-failover-0.4,${span_1}/${EXTEN:0},,${span_1}/${EXTEN:0},)
same => n,Answer()
same => n,Macro(dial-failover,${EXTEN})
;same => n,Macro(trunkdial-failover-0.4,${trunk_1}/${EXTEN:1},,,,0011)
same => n,Hangup()

[app-in]
exten => _X.,1,NoOp(app-in)
same => n,Set(dnid=600)
same => n,Set(inoutstatus=2)
same => n,Macro(stdexten-0.1,,SIP/6000))
same => n,Hangup()
exten => h,1,Macro(complet-cdr,)
exten => h,n,Macro(hangupcall,)

[macro-stdexten-0.1]
exten = s,1,Set(__DYNAMIC_FEATURES=${FEATURES})
exten = s,2,Set(DB(KESIX/USERS/lastcaller)=${CALLERID(num)})
exten = s,3,Set(ORIG_ARG1=${ARG1})
exten = s,4,Set(CDR(inoutstatus)=2)
exten = s,5,Macro(monitor-enable,${CALLERID(num)})
exten = s,6,GotoIf($["${FOLLOWME_${ARG1}}" = "1"]?9:7)
exten = s,7,Dial(${ARG2},${RINGTIME},${DIALOPTIONS})
exten = s,8,Goto(s-${DIALSTATUS},1)
exten = s,9,Macro(stdexten-followme,${ARG1},${ARG2})
exten = s-NOANSWER,1,Voicemail(${ORIG_ARG1},u)
exten = s-NOANSWER,2,Goto(default,s,1)
exten = s-BUSY,1,Voicemail(${ORIG_ARG1},b)
exten = s-BUSY,2,Goto(default,s,1)
exten = _s-.,1,Goto(s-NOANSWER,1)
exten = a,1,VoicemailMain(${ORIG_ARG1})

[macro-stdexten-0.2]
exten => s,1,GotoIf($~np~["${VMCOUNT(${ARG1})}" != "0"]~/np~?3)  ; User has voicemail
exten => s,2,GotoIf($~np~["${VMCOUNT(${ARG1})}" = "0"]~/np~?4)  ; User has no voicemail
exten => s,3,SendText(You have voicemail messages)  ; Tell user about voicemail
exten => s,4,Dial(${ARG2},10,tTr)  ; Ring! Ring!
exten => s,5,Goto(s-${DIALSTATUS},1)  ; Jump based on status...
exten => s,6,Hangup()  ; Just in case?
exten => s-BUSY,1,Voicemail(b${ARG1})  ; Busy, off to voicemail
exten => s-BUSY,2,Hangup()
exten => s-CHANUNAVAIL,1,Voicemail(u${ARG1})  ; Channel screwed. write a macro for here
exten => s-CHANUNAVAIL,2,Hangup()
exten => s-CONGESTION,1,Congestion()  ; Like above, write a macro for this case
exten => s-CONGESTION,2,Hangup()
exten => s-NOANSWER,1,Voicemail(u${ARG1})  ; Out to lunch, off to voicemail
exten => s-NOANSWER,2,Hangup()
exten => _s-.,1,Goto(s-NOANSWER,1)  ; Catch the freaks, off to voicemail

[macro-cdrincoming]
exten = s,1,Set(CDR(inoutstatus)=2)

[macro-monitor-enable]
exten => s,1,NoOp(start monitor checking)
same => n,NoOp(${ARG1})
same => n,GotoIf($["${BLINDTRANSFER}" = ""]?check)
same => n,ResetCDR(w)
same => n,StopMixMonitor()
same => n(check),GotoIf($["${ARG1}"="*"]?setmonitor)
same => n,ExecIf($["${ARG1}"=""]?MacroExit())
same => n,Set(RECENABLE="${DB(KESIX/USERS/${ARG1}/recording)}")
same => n,ExecIf($[${RECENABLE} != "yes"]?MacroExit())
same => n(setmonitor),Set(MONITOR_FILE=/var/spool/asterisk/monitor/${UNIQUEID})
same => n,NoOp(${MONITOR_FILE}.wav)
same => n,MixMonitor(${MONITOR_FILE}.wav,m)
same => n,Set(CDR(recordfile)=${MONITOR_FILE}.wav)
same => n,Playback(beep)
same => n,MacroExit()

[macro-recpause]
exten => s,1,Playback(disabled)
same => n,PauseMonitor

[macro-recunpause]
exten => s,1,Playback(enabled)
same => n,UnpauseMonitor

[macro-recstart]
exten => s,1,Set(FNAME=callrec_${MACRO_EXTEN}_${UNIQUEID}_GWTEST_${EPOCH})
same => n,Monitor(wav,${FNAME})

[macro-complet-cdr]
exten => s,1,Set(CDR(causecode)=${HANGUPCAUSE})
same => n,Set(CDR(dialstatus)=${DIALSTATUS})
same => n,Set(CDR(inoutstatus)=${inoutstatus})
same => n,Set(CDR(dnid)=${dnid})
same => n,ResetCDR(w)
same => n,NoCDR()
same => n,MacroExit()

[macro-hangupcall]
exten => s,1,NoOp(macro hangupcall called)
exten => s,n,Macro(complet-cdr,)
;exten => s,n,Set(notify=${CURL(http://127.0.0.1:3000/processHangup?uniqueid=${CDR(uniqueid)})
exten => s,n,Hangup
exten => s,n,MacroExit()

[macro-outisbusy]
exten => s,1,Playback(the-number-u-dialed&no-longer-in-service&check-number-dial-again,noanswer)
same => n,Macro(hangupcall)

[macro-outiscongestion]
exten => s,1,Playback(cannot-complete-network-error&check-number-dial-again,noanswer)

[sipp]
exten => 5005,1,Answer
exten => 5005,2,Background(tt-monkeys)
exten => 5005,4,Hangup
exten => 5006,1,Answer
same => n,Goto(sipp,5005,1)
same => n,Hangup
exten => 5007,1,Answer
same => n,Macro(cdrincoming)
same => n,Set(dnid=${EXTEN})
same => n,Goto(ringroups-custom-1,s,1)
same => n,Hangup
exten => 5008,1,Answer
same => n,Goto(sipp,5007,1)
same => n,NoOp("I hangup call")
same => n,Hangup

exten => 1157,1,Answer
same => n,Goto(app-to-xoip-be,${EXTEN},1)
same => n,NoOp("I hangup call")
same => n,Hangup

[app-pickup]
exten => _***.,1,Noop(process pickup ${EXTEN:3} by ${CALLERID(num)})
exten => _***.,n,PickupChan(SIP/${EXTEN:3})
exten => _***.,n,Hangup

[app-pickup-old]
exten => _***.,1,Noop(process pickup ${EXTEN:3} by ${CALLERID(num)})
exten => _***.,n,Pickup(${EXTEN:3})
exten => _***.,n,Pickup(${EXTEN:3}@default)
exten => _***.,n,Pickup(${EXTEN:3}@DID_span_2)
exten => _***.,n,Pickup(${EXTEN:3}@DID_span_2_default)
exten => _***.,n,Pickup(${EXTEN:3}@voicemenu-custom-1)
exten => _***.,n,Pickup(${EXTEN:3}@ringroups-custom-1)
exten => _***.,n,Pickup(${EXTEN:3}@ringroups-custom-2)
exten => _***.,n,Hangup


[app-inner-dial-with-dnd]
exten => _XXXX,1,Noop(dnd-call)
same => n,Set(TARGET_EXTEN=${EXTEN})
same => n,Dial(SIP/${EXTEN})
same => n,Noop(HANGUPCAUSE : ${HANGUPCAUSE})
same => n,Noop(DIALSTATUS ${DIALSTATUS})
same => n,Goto(s-${DIALSTATUS},1)
exten => s-BUSY,1,Noop(Dial failed due to BUSY - giving up)
same => n,Playback(/var/spool/asterisk/monitor/DND_${TARGET_EXTEN})
same => n,Busy(5)
;
exten => s-CONGESTION,1,Noop(Dial failed due to CONGESTION - play a good music)
same => n,Playback(/var/spool/asterisk/monitor/DND_${TARGET_EXTEN})
same => n,Hangup()
;
exten => _s-.,1,Noop(Get something wrong in the dialstatus)
same => n,Playback(goodbye)
same => n,Hangup()  ;

[app-inner-dial-with-dnd-voicemail]
exten => _XXXX,1,Noop(dnd-call)
same => n,Dial(SIP/${EXTEN})
same => n,Noop(HANGUPCAUSE : ${HANGUPCAUSE})
same => n,Noop(DIALSTATUS ${DIALSTATUS})
same => n,Goto(s-${DIALSTATUS})
same => n(s-BUSY),Noop(Dial failed due to BUSY - giving up)
same => n(s-BUSY),Wait(2)
same => n(s-BUSY),VoiceMail(${EXTEN},u)
same => n(s-CONGESTION),Noop(Dial failed due to CONGESTION - get voice mail)
same => n(s-CONGESTION),VoiceMail(${EXTEN},u)
same => n(s-CONGESTION),Hangup()

[app-inner-dial-with-followme]
exten => _XXXX,1,Noop(dnd-call)
same => n,Set(USER_FOLLOWME_STATE=User/${EXTEN}_Followme)
same => n,Set(FORCE_FOLLOWME=${DB(${USER_FOLLOWME_STATE})})
same => n,GotoIf($[${ISNULL(${FORCE_FOLLOWME})}]?:forcefollowme)
same => n,Dial(SIP/${EXTEN})
same => n,Noop(HANGUPCAUSE : ${HANGUPCAUSE})
same => n,Noop(DIALSTATUS ${DIALSTATUS})
same => n,Goto(s-${DIALSTATUS})
same => n(s-BUSY),Noop(Dial failed due to BUSY - giving up)
same => n(s-BUSY),Wait(2)
same => n(s-BUSY),VoiceMail(${EXTEN},u)
same => n(s-CONGESTION),Noop(Dial failed due to CONGESTION - get voice mail)
same => n(s-CONGESTION),VoiceMail(${EXTEN},u)
same => n(s-CONGESTION),Hangup()
;same => n(forcefollowme),GotoIf($["${FOLLOWME_${EXTEN}}"] = "1"]?:s-CONGESTION)
;same => n(forcefollowme),Followme(${EXTEN},${FOLLOWMEOPTIONS})
same => n(forcefollowme),Followme(${EXTEN})

[app-inner-dial-with-voicemail]
exten => _XXXX,1,Noop(dnd-call)
same => n,Set(USER_VOICEMAIL_STATE=User/${EXTEN}_VoiceMail)
same => n,Set(FORCE_VOICEMAIL=${DB(${USER_VOICEMAIL_STATE})})
same => n,GotoIf($[${ISNULL(${FORCE_VOICEMAIL})}]?:forcevoicemail)
same => n,Dial(SIP/${EXTEN})
same => n,Noop(HANGUPCAUSE : ${HANGUPCAUSE})
same => n,Noop(DIALSTATUS ${DIALSTATUS})
same => n,Goto(s-${DIALSTATUS})
same => n(s-BUSY),Noop(Dial failed due to BUSY - giving up)
same => n(s-BUSY),Wait(2)
same => n(s-BUSY),VoiceMail(${EXTEN},u)
same => n(s-CONGESTION),Noop(Dial failed due to CONGESTION - get voice mail)
same => n(s-CONGESTION),VoiceMail(${EXTEN},u)
same => n(s-CONGESTION),Hangup()
;same => n(forcefollowme),GotoIf($["${FOLLOWME_${EXTEN}}"] = "1"]?:s-CONGESTION)
;same => n(forcefollowme),Followme(${EXTEN},${FOLLOWMEOPTIONS})
same => n(forcevoicemail),Noop(Force get voicemail)
same => n(forcevoicemail),Wait(1)
same => n(forcevoicemail),VoiceMail(${EXTEN},u)
same => n(forcevoicemail),Hangup()

[app-inner-dial-with-followme]
exten => _XXXX,1,Noop(dnd-call)
same => n,Set(USER_FOLLOWME_STATE=User/${EXTEN}_Followme)
same => n,Set(FORCE_FOLLOWME=${DB(${USER_FOLLOWME_STATE})})
same => n,GotoIf($[${ISNULL(${FORCE_FOLLOWME})}]?:forcefollowme)
same => n,Dial(SIP/${EXTEN})
same => n,Noop(HANGUPCAUSE : ${HANGUPCAUSE})
same => n,Noop(DIALSTATUS ${DIALSTATUS})
same => n,Goto(s-${DIALSTATUS})
same => n(s-BUSY),Noop(Dial failed due to BUSY - giving up)
same => n(s-BUSY),Wait(2)
same => n(s-BUSY),VoiceMail(${EXTEN},u)
same => n(s-CONGESTION),Noop(Dial failed due to CONGESTION - get voice mail)
same => n(s-CONGESTION),VoiceMail(${EXTEN},u)
same => n(s-CONGESTION),Hangup()
;same => n(forcefollowme),GotoIf($["${FOLLOWME_${EXTEN}}"] = "1"]?:s-CONGESTION)
;same => n(forcefollowme),Followme(${EXTEN},${FOLLOWMEOPTIONS})
same => n(forcefollowme),Followme(${EXTEN})

[app-dial-secratary-old]
exten => _XXXX,1,Noop(app-dial-secritary)
same => n,Set(USER_VOICEMAIL_STATE=User/${EXTEN}_VoiceMail)
same => n,Set(FORCE_VOICEMAIL=${DB(${USER_VOICEMAIL_STATE})})
same => n,GotoIf($[${ISNULL(${FORCE_VOICEMAIL})}]?:forcevoicemail)
same => n,Dial(SIP/${EXTEN},180,${DIALOPTIONS}i)
same => n,Goto(ringroups-custom-1,s,1)
same => n,Hangup()
same => n(forcevoicemail),Noop(Force register voicemail)
same => n(forcevoicemail),Wait(1)
same => n(forcevoicemail),VoiceMail(${EXTEN},su)
same => n(forcevoicemail),Hangup()

[app-dial-secratary]
exten => _X.,1,NoOp(test-dnd)
exten => _X.,n,GotoIf($["${DB(DND/${EXTEN})}" = "YES"]?dndactivate:dnddeactivate)
exten => _X.,n(dndactivate),NoOp(DND activate for extention ${EXTEN})
exten => _X.,n,Noop(Placeholder for dnd activate process the ${EXTEN} force voicemail)
exten => _X.,n,VoiceMail(${EXTEN},u)
exten => _X.,n,Hangup()
exten => _X.,n(dnddeactivate),NoOp(DND deactivate for extention ${EXTEN})
exten => _X.,n,GotoIf($["${DB(NIGHT/${EXTEN})}" = "YES"]?nightactivate:nightdeactivate)
exten => _X.,n(nightactivate),NoOp(NIGHT activate for extention ${EXTEN})
;exten => _X.,n,Followme(${EXTEN},${FOLLOWMEOPTIONS})
exten => _X.,n,Dial(LOCAL/${FOLLOWME_NUMBER_${EXTEN}}@DLPN_DialPlan1,30,m)
exten => _X.,n,Hangup()
exten => _X.,n(nightdeactivate),NoOp(NIGHT deactivate for extention ${EXTEN})
exten => _X.,n(nightdeactivate),NoOp(try dial extention ${EXTEN})
exten => _X.,n,Dial(SIP/${EXTEN},180,${DIALOPTIONS}i)
exten => _X.,Goto(ringroups-custom-1,s,1)
exten => _X.,n,Hangup()

[app-ext-blf]
exten => _*76XXXX,1,Goto(app-dnd-toggle,*76,1)
exten => _*75XXXX,1,Goto(app-daynight-toggle,*75,1)
exten => _*76XXXX,hint,Custom:DND${EXTEN:3}
exten => _*75XXXX,hint,Custom:NIGHT${EXTEN:3}


[test-dnd]
exten => _X.,1,NoOp(test-dnd)
exten => _X.,n,GotoIf($["${DB(DND/${EXTEN})}" = "YES"]?dndactivate:dnddeactivate)
exten => _X.,n(dndactivate),NoOp(DND activate for extention ${EXTEN})
exten => _X.,n,Noop(Placeholder for dnd activate process the ${EXTEN})
exten => _X.,n,Hangup()
exten => _X.,n(dnddeactivate),NoOp(DND deactivate for extention ${EXTEN})
exten => _X.,n,GotoIf($["${DB(NIGHT/${EXTEN})}" = "YES"]?nightactivate:nightdeactivate)
exten => _X.,n(nightactivate),NoOp(NIGHT activate for extention ${EXTEN})
exten => _X.,n,Noop(Placeholder for night activate process the ${EXTEN})
exten => _X.,n,Hangup()
exten => _X.,n(nightdeactivate),NoOp(NIGHT deactivate for extention ${EXTEN})
exten => _X.,n,Noop(Placeholder for call the ${EXTEN})
exten => _X.,n,Hangup()

[app-out-hangup-call-party]
exten = _X.,1,NoOp(test-hangup-call-party)
exten = _X.,n,Set(CALLERID(num)=0007)
exten = _X.,n,Set(WHOMAKEHANGUP=CALLER)
exten = _X.,n,Dial(${span_2}/${EXTEN:0},,${DIALOPTIONS}g)
exten = _X.,n,Set(WHOMAKEHANGUP=CALLEE)
exten = _X.,n,GoSub(app-custom-check-dialstatus,s,1(${DIALSTATUS}))
exten = _X.,n,Hangup()
exten = h,1,NoOP(Call closed by ${WHOMAKEHANGUP}
exten = h,n,NoOp(Check sip return code for channel : ${CDR(dstchannel)})
;[HINTS],
;exten => 6000,hint,SIP/6000
;exten => 6006,hint,SIP/6006


